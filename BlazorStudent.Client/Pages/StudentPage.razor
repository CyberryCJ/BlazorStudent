@page "/studentpage"
@using BlazorStudent.Shared
@inject HttpClient Http

   
   
    <div>
        <EditForm Model="@stu" OnSubmit="@(async () => await SaveData())">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label>Student ID</label>
                        <input type="text" class="form-control" bind="@stu.Id" />
                    </div>
                    <div class="form-group">
                        <label>First Name</label>
                        <input type="text" class="form-control" bind="@stu.FirstName" />
                    </div>
                    <div class="form-group">
                        <label>Middle Initial</label>
                        <input type="text" class="form-control" bind="@stu.Mi" />
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label>Last Name</label>
                        <input type="text" class="form-control" bind="@stu.LastName" />
                    </div>
                    <div class="form-group">
                        <label>Birthdate</label>
                        <input type="date" format-value="yyyy-MM-dd" class="form-control" bind="@stu.Birthdate" />
                    </div>
                    <div class="form-group">
                        <label>Address</label>
                        <input type="text" class="form-control" id="Address" bind="@stu.Address" />
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label>Email Address</label>
                        <input type="email" class="form-control" id="Email" bind="@stu.Email" />
                    </div>
                    <div class="form-group">
                        <label>User Name</label>
                        <input type="text" class="form-control" id="UserName" bind="@stu.UserName" />
                    </div>
                    <div class="form-group">
                        <label>Password</label>
                        <input type="password" class="form-control" id="Password" bind="@stu.Password" />
                    </div>

                </div>
            </div>
            <button class="btn btn-outline btn-success" type="submit">SAVE</button>

        </EditForm>
    </div>

    
<div>
    
    @if (studentlist == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>StudentId</th>
                    <th>First Name</th>
                    <th>M.I</th>
                    <th>Last Name</th>
                    <th>Birth Date</th>
                    <th>Address</th>
                    <th>Email Address</th>
                    <th></th>

                </tr>
            </thead>
            <tbody>
                @foreach (var student in studentlist)
                {
                    <tr>
                        <td>@student.Id</td>
                        <td>@student.FirstName</td>
                        <td>@student.Mi</td>
                        <td>@student.LastName</td>
                        <td>@student.Birthdate.ToShortDateString()</td>
                        <td>@student.Address</td>
                        <td>@student.Email</td>
                        <td></td>

                    </tr>
                }
            </tbody>
        </table>

    }
    </div>



    @functions
{
        SharedStudents[] studentlist;

        private SharedStudents stu { get; set; } = new SharedStudents();

        protected async override Task OnInitAsync()
        {
            studentlist = await Http.GetJsonAsync<SharedStudents[]>("api/Student/StudentList");
        }


        protected async Task SaveData()
        {
            await Http.PostJsonAsync("http://localhost:52045/api/Student/Create", stu);

           await OnInitAsync();
        }

    }
